#!/bin/bash
set -e
set -o pipefail
shopt -s nullglob

# Copyright (c) 2009-2020 Sander van der Burg
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Shows the usage of this command to the user

showUsage()
{
    cat <<EOF
Usage: $0 [OPTION] userfile
  or: $0 [OPTION] userdir

The command \`dysnomia-addusers' automatically creates users from a configuration
files consisting of key=value pairs.

Options:
  -h, --help                 Shows the usage of this command
  -v, --version              Shows the version of this command
EOF
}

showVersion()
{
    cat <<EOF
$0 (@PACKAGE_NAME@ @PACKAGE_VERSION@)

Copyright (C) 2009-2020 Sander van der Burg
EOF
}

createUserDarwin()
{
    export userfile="$1"

    (
        source "$userfile"

        if [ "$createHomeDirOnly" = "1" ]
        then
            createConfiguredHomeDir
        else
            username="$(basename "$userfile")"

            if dscl . -read /Users/$username
            then
                echo "User: $username already exists!" >&2
            else
                (
                    echo "-addUser"
                    echo "$username"

                    if [ -n "$description" ]
                    then
                        echo "-fullName"
                        echo "$description"
                    fi

                    if [ -n "$password" ]
                    then
                        echo "-password"
                        echo "$password"
                    fi
                ) | @xargs@ -d '\n' sysadminctl

                if [ -n "$uid" ]
                then
                    dscl . create /Users/$username UniqueID "$uid"
                fi

                if [ -n "$shell" ]
                then
                    dscl . create /Users/$username UserShell "$shell"
                fi

                if [ -n "$group" ]
                then
                    dseditgroup -o edit -a $username -t user $group
                fi
            fi
        fi
    )
}

# Autoconf settings

export prefix=@prefix@
export exec_prefix=@exec_prefix@

# Import common functions
source @datadir@/@PACKAGE@/usermgmt-commons

# Parse valid argument options

PARAMS=`@getopt@ -n $0 -o hv -l help,version -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

# Evaluate valid options

eval set -- "$PARAMS"

while [ "$1" != "--" ]
do
    case "$1" in
        -h|--help)
            showUsage
            exit 0
            ;;
        -v|--version)
            showVersion
            exit 0
            ;;
    esac

    shift
done

shift

# Validate parameters
checkPath "$1"

# Execute operation
executeUserMgmtOperation users createUserDarwin
