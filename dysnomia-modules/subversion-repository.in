#!/bin/bash
set -e
set -o pipefail
shopt -s nullglob

# Manages the deployment lifecycle of a Subversion repository.
#
# On activation, an initial dump can be restored. If the mutable component
# contains a sub folder named subversion-repositories/, then the dump files
# stored inside get imported.
#
# This module also supports snapshotting. It uses the revision number of the
# repository to uniquely identify each snapshot.
#
# Container properties (environment variables):
# svnBaseDir: Base directory in which Subversion repositories are stored
# svnGroup: The group that owns the files stored in the Subversion base directory

# Autoconf settings
export prefix=@prefix@

# Import utility functions
source @datadir@/@PACKAGE@/util

# Sets a number of common utility environment variables
composeUtilityVariables $0 $2 $3

case "$1" in
    # Creates a Subversion repository and imports a Subversion dump if provided
    activate)
        if [ ! -e $svnBaseDir/$componentName ]
        then
            mkdir -p $svnBaseDir

            @svnadmin@ create $svnBaseDir/$componentName
            if [ -d $2/subversion-repositories ]
            then
                cat $2/subversion-repositories/* | @svnadmin@ load $svnBaseDir/$componentName
            fi

            chgrp -R $svnGroup $svnBaseDir/$componentName
            chmod -R g+w $svnBaseDir/$componentName
            chmod g+s $svnBaseDir/$componentName/db
        fi
        markComponentAsActive
        ;;
    deactivate)
        markComponentAsGarbage
        ;;
    snapshot)
        rev=$(cat $svnBaseDir/$componentName/db/current)

        snapshotsPath=$(composeSnapshotsPath)

        if [ ! -d $snapshotsPath/$rev ]
        then
            mkdir -p $snapshotsPath/$rev
            @svnadmin@ dump -r $rev $svnBaseDir/$componentName | xz > $snapshotsPath/$rev/dump.xz
            createGenerationSymlink $rev
        fi
        ;;
    restore)
        rev=$(cat $svnBaseDir/$componentName/db/current)
        lastSnapshot=$(determineLastSnapshot)

        if [ "$lastSnapshot" != "" ] && [ "$rev" != "$lastSnapshot" ]
        then
            rm -Rf $svnBaseDir/$componentName
            @svnadmin@ create $svnBaseDir/$componentName
            chgrp -R $svnGroup $svnBaseDir/$componentName
            chmod -R g+w $svnBaseDir/$componentName
            chmod g+s $svnBaseDir/$componentName/db
            xzcat $lastSnapshot/dump.xz | @svnadmin@ load $svnBaseDir/$componentName
        fi
        ;;
    collect-garbage)
        if componentMarkedAsGarbage
        then
            rm -Rf $svnBaseDir/$componentName
            unmarkComponentAsGarbage
        fi
        ;;
    shell)
        cat >&2 <<EOF
This is a shell session that can be used to control the '$componentName' Subversion repository.

Module specific environment variables:
svnBaseDir  Base directory in which Subversion repositories are stored
svnGroup    The group that owns the files stored in the Subversion base directory

Some useful commands:
@svnadmin@  # Run the SVN administration tool
EOF
        ;;
esac
