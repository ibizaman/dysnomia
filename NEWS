Version 0.10
============
- Added nginx-webapplication module

- The process and wrapper modules are simplified, and no longer use a process
  manager. The depreceated old implementations can still be used by passing the
  --enable-legacy parameter to the configure script. As a resolution, if it
  desired to use systemd, use: systemd-unit. For init scripts, use:
  sysvinit-script. Platform agnostic process management can be done with the
  managed-process module.

- State is managed in the user's home directory by default for unprivileged users

- Type parameters can also be paths (files or directories). Then Dysnomia will load a Dysnomia module from that path instead of using the search directories

- Added Dysnomia modules for various kinds of process managers: sysvinit, bsdrc, systemd, launchd, supervisord, cygrunsrv, s6-rc

- Added a target-agnostic process manager module: managed-process that translates a target-agnostic JSON config to a desired process manager configuration on the target machine

- Added dysnomia-{add,del}{users,groups} tools to create and discard users and groups

Version 0.9
===========
- Added --generate-dot option to dysnomia-containers so that system configurations can be visualized

- Added influx-database module

Version 0.8
===========
- Added --shell parameter to dysnomia that can be used to spawn shell sessions in which container properties can be directly used. This is useful for arbitrary maintenance tasks.

- new fileset module that can be used to manage directories with mutable and immutable files

- Added --check option to the dysnomia-snapshots tool that checks whether the integrity of the snapshots have been broken

Version 0.7
===========
- dysnomia-containers can now also garbage collect snapshots for specific containers and components

- The snapshot garbage collector now also removes empty folders

- systemd units with socket activation are now correctly configured to load at startup

- Some minor cleanups to the Dysnomia module interface

Version 0.6
===========
- Operations are now idempotent by definition

- Added dysnomia-containers utility that executes operations on a container-level

- Added Dysnomia NixOS module that auto-configures Dysnomia to work on containers deployed by NixOS

- Added snapshot and restore operations for the nixos-configuration type that will internally consult the dysnomia-containers utility

Version 0.5
===========
- systemd templates are now wanted by dysnomia.target, so that deployed services are activated on each startup

- Added support for systemd socket activation

- Dysnomia modules have better documentation so that it becomes more obvious what they can do and how they can be used

Version 0.4
===========
- Make process and wrapper deactivation more robust in case a previous deactivation has failed

- Added dysnomia-snapshots utility and snapshotting facilities

Version 0.3
===========
- Experimental support for MS SQL and IIS activation types

- Rebranded the package into Dysnomia, because the modules can be used without Disnix

- Implemented a dysnomia command-line utililty for deploying mutable components

- The process and wrapper types do not activate directly anymore. Instead they compose a systemd or init.d job.

- Added mongo-database support

- Support unprivileged user processes for wrapper and process types

Version 0.2
===========
- Removed the _nixos postfix, because scripts are not limited to NixOS

- Added configure script, which detects supported types and configures activation modules

- Added types for PostgreSQL databases and Subversion repositories

- Added test suite for all activation types
